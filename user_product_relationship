/// app.js file
const path = require('path');

const express = require('express');
const bodyParser = require('body-parser');

const errorController = require('./controllers/error');
const sequelize=require('./util/database');
const Product=require('./models/product');
const User=require('./models/user');
const cors=require('cors');

const app = express();

const adminRoutes = require('./routes/admin');
const shopRoutes = require('./routes/shop');
app.use(cors());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

app.use((req,res,next)=>{
  User.findOne({where: {id:1}}).then(user=>{
    req.user=user;
    console.log(req.user)
    next();
  }).catch(err=>console.log(err));
}); 


app.use('/admin', adminRoutes);
app.use(shopRoutes);

app.use(errorController.get404);

Product.belongsTo(User, {constraints: true, onDelete:'CASCADE'});
User.hasMany(Product);

sequelize
 // .sync({force: true}) //it is create everytime new tables every time collapse data
 .sync()
  .then(result => {
    //console.log(result);
    return User.findOne({where :{id:1}})}).then(user=>{
      if(!user){
        return User.create({name:'naveen', email:'naveen@gmail.com'});
      }
      return user;
    }).then(user=>{
       // console.log(user);
        app.listen(2000);
  })
  .catch(err => {
    console.log(err);
  });

/////admin.js file in controllers

const path = require('path');
const rootdir=require('../util/path');
const Product=require('../models/product');


exports.getAddProduct= (req, res, next)=>{

  res.sendFile(path.join(rootdir, 'views', '/admin/edit-product.html'));
};

exports.postAddProduct = (req, res, next) => {
  const title = req.body.title;
  const imageUrl = req.body.imageUrl;
  const price = req.body.price;
  const description = req.body.description;
  req.user.createProduct({
      title: title,
      price: price,
      imageUrl: imageUrl,
      description: description
    })
    .then(result => {
      // console.log(result);
      console.log('Created Product');
      res.redirect('/admin/products');
    })
    .catch(err => {
      console.log(err);
    });
};
exports.getEditProduct= (req, res, next)=>{
    const editMode=req.query.edit;  
    if(!editMode){
      res.redirect('/');
    }

    const prodId = req.params.productId;
    req.user
    .getProducts({ where: { id: prodId } })
   // Product.findById(prodId)
    .then(products=>{
      const product = products[0];
      if(!product){
        return res.redirect('/');
      }
      res.sendFile(path.join(rootdir, 'views', '/admin/edit-product.html'));
      console.log(product);
    }).catch(err=>console.log(err));

};

    exports.postEditProduct = (req, res, next) => {
     const prodId=req.body.productId;
     const updatedTitle = req.body.title;
    const updatedImageUrl = req.body.imageUrl;
    const updatedPrice = req.body.price;
    const updatedDescription = req.body.description;
    Product.findById(prodId)
    .then(product => {
      product.title = updatedTitle;
      product.price = updatedPrice;
      product.description = updatedDescription;
      product.imageUrl = updatedImageUrl;
      return product.save();
    })
    .then(result => {
      console.log('UPDATED PRODUCT!');
      res.redirect('/admin/products');
    })
    .catch(err => console.log(err));
  };
  


exports.getProducts = (req, res, next) => {
  req.user
  .getProducts().then(products => {
    console.log(products);
    res.sendFile(path.join(rootdir, 'views', '/admin/products.html'));
  })
  .catch(err => {
    console.log(err);
  });
};

exports.DeleteProduct= (req, res, next)=>{
  const prodId = req.params.productId;
  Product.findById(prodId)
    .then(product => {
      return product.destroy();
    })
    .then(result => {
      console.log('DESTROYED PRODUCT');
      res.redirect('/admin/products');
    })
    .catch(err => console.log(err));
};

/// product.js file in models
//
const Sequelize = require('sequelize');

const sequelize = require('../util/database');

const Product = sequelize.define('product', {
  id: {
    type: Sequelize.INTEGER,
    autoIncrement: true,
    allowNull: false,
    primaryKey: true
  },
  title: Sequelize.STRING,
  price: {
    type: Sequelize.DOUBLE,
    allowNull: false
  },
  imageUrl: {
    type: Sequelize.STRING,
    allowNull: false
  },
  description: {
    type: Sequelize.STRING,
    allowNull: false
  }
});

module.exports = Product;

///user.js file in models
//
const Sequelize = require('sequelize');

const sequelize = require('../util/database');

const User = sequelize.define('userrr', {
  id: {
    type: Sequelize.INTEGER,
    autoIncrement: true,
    allowNull: false,
    primaryKey: true
  },
  name: Sequelize.STRING,
  email: Sequelize.STRING,
  
});

module.exports = User;
